# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from kyve.pool.v1beta1 import tx_pb2 as kyve_dot_pool_dot_v1beta1_dot_tx__pb2


class MsgStub(object):
  """Msg defines the Msg service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.FundPool = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/FundPool',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgFundPool.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgFundPoolResponse.FromString,
        )
    self.DefundPool = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/DefundPool',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDefundPool.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDefundPoolResponse.FromString,
        )
    self.CreatePool = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/CreatePool',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCreatePool.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCreatePoolResponse.FromString,
        )
    self.UpdatePool = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/UpdatePool',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgUpdatePool.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgUpdatePoolResponse.FromString,
        )
    self.DisablePool = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/DisablePool',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDisablePool.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDisablePoolResponse.FromString,
        )
    self.EnablePool = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/EnablePool',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgEnablePool.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgEnablePoolResponse.FromString,
        )
    self.ScheduleRuntimeUpgrade = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/ScheduleRuntimeUpgrade',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgScheduleRuntimeUpgrade.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgScheduleRuntimeUpgradeResponse.FromString,
        )
    self.CancelRuntimeUpgrade = channel.unary_unary(
        '/kyve.pool.v1beta1.Msg/CancelRuntimeUpgrade',
        request_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCancelRuntimeUpgrade.SerializeToString,
        response_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCancelRuntimeUpgradeResponse.FromString,
        )


class MsgServicer(object):
  """Msg defines the Msg service.
  """

  def FundPool(self, request, context):
    """FundPool ...
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DefundPool(self, request, context):
    """DefundPool ...
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreatePool(self, request, context):
    """CreatePool defines a governance operation for creating a new pool.
    The authority is hard-coded to the x/gov module account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdatePool(self, request, context):
    """UpdatePool defines a governance operation for updating an existing pool.
    The authority is hard-coded to the x/gov module account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisablePool(self, request, context):
    """DisablePool defines a governance operation for disabling an existing pool.
    The authority is hard-coded to the x/gov module account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnablePool(self, request, context):
    """EnablePool defines a governance operation for enabling an existing pool.
    The authority is hard-coded to the x/gov module account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ScheduleRuntimeUpgrade(self, request, context):
    """ScheduleRuntimeUpgrade defines a governance operation for scheduling a runtime upgrade.
    The authority is hard-coded to the x/gov module account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelRuntimeUpgrade(self, request, context):
    """CancelRuntimeUpgrade defines a governance operation for cancelling a runtime upgrade.
    The authority is hard-coded to the x/gov module account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'FundPool': grpc.unary_unary_rpc_method_handler(
          servicer.FundPool,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgFundPool.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgFundPoolResponse.SerializeToString,
      ),
      'DefundPool': grpc.unary_unary_rpc_method_handler(
          servicer.DefundPool,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDefundPool.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDefundPoolResponse.SerializeToString,
      ),
      'CreatePool': grpc.unary_unary_rpc_method_handler(
          servicer.CreatePool,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCreatePool.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCreatePoolResponse.SerializeToString,
      ),
      'UpdatePool': grpc.unary_unary_rpc_method_handler(
          servicer.UpdatePool,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgUpdatePool.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgUpdatePoolResponse.SerializeToString,
      ),
      'DisablePool': grpc.unary_unary_rpc_method_handler(
          servicer.DisablePool,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDisablePool.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgDisablePoolResponse.SerializeToString,
      ),
      'EnablePool': grpc.unary_unary_rpc_method_handler(
          servicer.EnablePool,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgEnablePool.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgEnablePoolResponse.SerializeToString,
      ),
      'ScheduleRuntimeUpgrade': grpc.unary_unary_rpc_method_handler(
          servicer.ScheduleRuntimeUpgrade,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgScheduleRuntimeUpgrade.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgScheduleRuntimeUpgradeResponse.SerializeToString,
      ),
      'CancelRuntimeUpgrade': grpc.unary_unary_rpc_method_handler(
          servicer.CancelRuntimeUpgrade,
          request_deserializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCancelRuntimeUpgrade.FromString,
          response_serializer=kyve_dot_pool_dot_v1beta1_dot_tx__pb2.MsgCancelRuntimeUpgradeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kyve.pool.v1beta1.Msg', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
