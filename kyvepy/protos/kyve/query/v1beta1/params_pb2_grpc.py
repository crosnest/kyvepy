# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from kyve.query.v1beta1 import params_pb2 as kyve_dot_query_dot_v1beta1_dot_params__pb2


class QueryParamsStub(object):
  """QueryPool ...
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Params = channel.unary_unary(
        '/kyve.query.v1beta1.QueryParams/Params',
        request_serializer=kyve_dot_query_dot_v1beta1_dot_params__pb2.QueryParamsRequest.SerializeToString,
        response_deserializer=kyve_dot_query_dot_v1beta1_dot_params__pb2.QueryParamsResponse.FromString,
        )


class QueryParamsServicer(object):
  """QueryPool ...
  """

  def Params(self, request, context):
    """Pools queries for all pools.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryParamsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Params': grpc.unary_unary_rpc_method_handler(
          servicer.Params,
          request_deserializer=kyve_dot_query_dot_v1beta1_dot_params__pb2.QueryParamsRequest.FromString,
          response_serializer=kyve_dot_query_dot_v1beta1_dot_params__pb2.QueryParamsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kyve.query.v1beta1.QueryParams', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
