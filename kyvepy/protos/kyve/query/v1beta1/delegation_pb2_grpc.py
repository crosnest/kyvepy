# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from kyve.query.v1beta1 import delegation_pb2 as kyve_dot_query_dot_v1beta1_dot_delegation__pb2


class QueryDelegationStub(object):
  """QueryDelegation contains all rpc requests related to direct delegation data
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Delegator = channel.unary_unary(
        '/kyve.query.v1beta1.QueryDelegation/Delegator',
        request_serializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorRequest.SerializeToString,
        response_deserializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorResponse.FromString,
        )
    self.DelegatorsByStaker = channel.unary_unary(
        '/kyve.query.v1beta1.QueryDelegation/DelegatorsByStaker',
        request_serializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorsByStakerRequest.SerializeToString,
        response_deserializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorsByStakerResponse.FromString,
        )
    self.StakersByDelegator = channel.unary_unary(
        '/kyve.query.v1beta1.QueryDelegation/StakersByDelegator',
        request_serializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryStakersByDelegatorRequest.SerializeToString,
        response_deserializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryStakersByDelegatorResponse.FromString,
        )


class QueryDelegationServicer(object):
  """QueryDelegation contains all rpc requests related to direct delegation data
  """

  def Delegator(self, request, context):
    """Delegator returns delegation information for a specific delegator of a specific staker.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DelegatorsByStaker(self, request, context):
    """DelegatorsByStaker returns all delegators that have delegated to the given staker
    This query is paginated.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StakersByDelegator(self, request, context):
    """StakersByPoolAndDelegator returns all stakers the given delegator has delegated to.
    This query is paginated.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryDelegationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Delegator': grpc.unary_unary_rpc_method_handler(
          servicer.Delegator,
          request_deserializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorRequest.FromString,
          response_serializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorResponse.SerializeToString,
      ),
      'DelegatorsByStaker': grpc.unary_unary_rpc_method_handler(
          servicer.DelegatorsByStaker,
          request_deserializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorsByStakerRequest.FromString,
          response_serializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryDelegatorsByStakerResponse.SerializeToString,
      ),
      'StakersByDelegator': grpc.unary_unary_rpc_method_handler(
          servicer.StakersByDelegator,
          request_deserializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryStakersByDelegatorRequest.FromString,
          response_serializer=kyve_dot_query_dot_v1beta1_dot_delegation__pb2.QueryStakersByDelegatorResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kyve.query.v1beta1.QueryDelegation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
